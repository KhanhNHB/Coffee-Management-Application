/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sample.application;

import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import sample.accounts.AccountsDAO;
import sample.accounts.AccountsDTO;
import sample.login.Login;

/**
 *
 * @author hello
 */
public class InfoAccount extends javax.swing.JFrame {

    private AccountsDTO dtoAccounts;
    private AccountsDAO daoAccounts;

    /**
     * Creates new form InfoAccount
     */
    public InfoAccount() {
        initComponents();
    }

    public InfoAccount(AccountsDTO dtoAccounts) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);

        this.dtoAccounts = dtoAccounts;
        txtUsername.setText(this.dtoAccounts.getUsername());
        txtFullname.setText(this.dtoAccounts.getFullname());
        txtPassword.setText(this.dtoAccounts.getPassword());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlWrapInfoAcount = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblFullname = new javax.swing.JLabel();
        txtFullname = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblNewPassword = new javax.swing.JLabel();
        txtNewPassword = new javax.swing.JPasswordField();
        lblConfirmPassword = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        btnUpdateAccount = new javax.swing.JButton();
        btnExitInfoAccount = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlWrapInfoAcount.setLayout(new java.awt.GridLayout(6, 2, 20, 20));

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUsername.setText("Tên đăng nhập:");
        pnlWrapInfoAcount.add(lblUsername);

        txtUsername.setEditable(false);
        pnlWrapInfoAcount.add(txtUsername);

        lblFullname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFullname.setText("Tên hiển thị:");
        pnlWrapInfoAcount.add(lblFullname);
        pnlWrapInfoAcount.add(txtFullname);

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPassword.setText("Mật khẩu:");
        pnlWrapInfoAcount.add(lblPassword);
        pnlWrapInfoAcount.add(txtPassword);

        lblNewPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNewPassword.setText("Mật khẩu mới:");
        pnlWrapInfoAcount.add(lblNewPassword);
        pnlWrapInfoAcount.add(txtNewPassword);

        lblConfirmPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblConfirmPassword.setText("Nhập lại:");
        pnlWrapInfoAcount.add(lblConfirmPassword);
        pnlWrapInfoAcount.add(txtConfirmPassword);

        btnUpdateAccount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdateAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sample/application/refresh.png"))); // NOI18N
        btnUpdateAccount.setText("Cập nhập");
        btnUpdateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAccountActionPerformed(evt);
            }
        });
        pnlWrapInfoAcount.add(btnUpdateAccount);

        btnExitInfoAccount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExitInfoAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sample/application/logout.png"))); // NOI18N
        btnExitInfoAccount.setText("Thoát");
        btnExitInfoAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitInfoAccountActionPerformed(evt);
            }
        });
        pnlWrapInfoAcount.add(btnExitInfoAccount);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlWrapInfoAcount, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlWrapInfoAcount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAccountActionPerformed
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        String newPassword = txtNewPassword.getText();
        String confirmPassword = txtConfirmPassword.getText();
        String fullname = txtFullname.getText();
        int type = this.getDtoAccounts().getType(); // 1. admin, 2. user
        // username
        txtUsername.setBorder(new LineBorder(Color.GREEN, 2));
        //fullname
        if (fullname.isEmpty()) {
            txtFullname.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Vui lòng điền tên hiển thị.");
            txtFullname.setText("");
            return;
        }
        txtFullname.setBorder(new LineBorder(Color.GREEN, 2));
        // password
        if (password.isEmpty()) {
            txtPassword.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Vui lòng điền mật khẩu.");
            txtPassword.setText("");
            return;
        }
        txtPassword.setBorder(new LineBorder(Color.GREEN, 2));
        // new password
        if (newPassword.isEmpty()) {
            txtNewPassword.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Vui lòng điền mật khẩu mới.");
            txtNewPassword.setText("");
            return;
        }
        if (!newPassword.equals(password)) {
            txtNewPassword.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Mật khẩu mới không trùng với mật khẩu hiện tại.");
            txtNewPassword.setText("");
            return;
        }
        txtNewPassword.setBorder(new LineBorder(Color.GREEN, 2));
        // confirm new password
        if (confirmPassword.isEmpty()) {
            txtConfirmPassword.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Vui lòng điền lại mật khẩu mới.");
            txtConfirmPassword.setText("");
            return;
        }
        if (!confirmPassword.equals(newPassword)) {
            txtConfirmPassword.setBorder(new LineBorder(Color.RED, 2));
            JOptionPane.showMessageDialog(this, "Mật khẩu xác nhận không trùng với mật khẩu mới.");
            txtConfirmPassword.setText("");
            return;
        }
        txtConfirmPassword.setBorder(new LineBorder(Color.GREEN, 2));
        daoAccounts = new AccountsDAO();
        boolean result;
        try {
            result = daoAccounts.updateAccounts(username, fullname, password, confirmPassword, type);
            if (result) {
                JOptionPane.showMessageDialog(this, "Cập nhập mật khẩu thành công.");
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhập mật khẩu thất bại.");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(InfoAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateAccountActionPerformed

    private void btnExitInfoAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitInfoAccountActionPerformed
        this.dispose();
        new Login();
    }//GEN-LAST:event_btnExitInfoAccountActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
        new Login();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExitInfoAccount;
    private javax.swing.JButton btnUpdateAccount;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblFullname;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlWrapInfoAcount;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the dtoAccounts
     */
    public AccountsDTO getDtoAccounts() {
        return dtoAccounts;
    }

    /**
     * @param dtoAccounts the dtoAccounts to set
     */
    public void setDtoAccounts(AccountsDTO dtoAccounts) {
        this.dtoAccounts = dtoAccounts;
    }
}
